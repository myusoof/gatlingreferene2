apply plugin: 'scala'
apply plugin: 'idea'


repositories {
    mavenCentral()
}

dependencies {
    testCompile 'org.scala-lang:scala-library:2.11.6'
    testCompile group: 'io.gatling', name: 'gatling-maven-plugin', version: '2.2.0'
    testCompile group: 'io.gatling.highcharts', name: 'gatling-charts-highcharts', version: '2.2.2'
}

task runLoadTest(dependsOn: 'compileTestScala') << {
  logger.lifecycle(" ---- Executing all Gatling scenarios from: ${sourceSets.test.output.classesDir} ----")
    int count = 0
    sourceSets.test.output.classesDir.eachFileRecurse{ file ->
        if(file.isFile()){
            count++
            logger.lifecycle("Tranformed file ${count.toString()} into ${file.name}")
        }
    }
  sourceSets.test.output.classesDir.eachFileRecurse { file ->
    if (file.isFile()) {  
      //Remove the full path, .class and replace / with a .
      logger.debug("Tranformed file ${file} into")
      def gatlingScenarioClass = (file.getPath() - (sourceSets.test.output.classesDir.getPath() + File.separator) - '.class')
                                                      .replace(File.separator, '.')
                                                      
      logger.debug("Tranformed file ${file} into scenario class ${gatlingScenarioClass}")
      javaexec {
             // I do not use this so
             main = 'io.gatling.app.Gatling'
             classpath = sourceSets.test.output + sourceSets.test.runtimeClasspath
          args = ['-s',gatlingScenarioClass, '-rf', 'build/reports/gatling']
         /* jvmArgs = [
                  '-Xmx1024M',
                  '-Xms1024M',
                  '-Xss1m',
                  '-XX:MaxPermSize=256M'
          ]*/

             /*args = [ '-sbf',
                   sourceSets.test.output.classesDir,
                   '-s',
                   gatlingScenarioClass,
                   '-rf',
                   'build/reports/gatling']*/
      }   
    }
  }
  logger.lifecycle(" ---- Done executing all Gatling scenarios ----")
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.4'
}